<?php

namespace Proxies\__CG__\GM\ProjetBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Projet extends \GM\ProjetBundle\Entity\Projet implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'id', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'reference', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'intitule', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'datePublication', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'annonceur', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'duree', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'lieu', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'profil', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'etat', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'collaborateurs', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'projetColab'];
        }

        return ['__isInitialized__', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'id', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'reference', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'intitule', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'datePublication', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'annonceur', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'duree', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'lieu', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'profil', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'description', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'etat', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'collaborateurs', '' . "\0" . 'GM\\ProjetBundle\\Entity\\Projet' . "\0" . 'projetColab'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Projet $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setReference($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReference', [$reference]);

        return parent::setReference($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getReference()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReference', []);

        return parent::getReference();
    }

    /**
     * {@inheritDoc}
     */
    public function setIntitule($intitule)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIntitule', [$intitule]);

        return parent::setIntitule($intitule);
    }

    /**
     * {@inheritDoc}
     */
    public function getIntitule()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIntitule', []);

        return parent::getIntitule();
    }

    /**
     * {@inheritDoc}
     */
    public function setDatePublication($datePublication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDatePublication', [$datePublication]);

        return parent::setDatePublication($datePublication);
    }

    /**
     * {@inheritDoc}
     */
    public function getDatePublication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDatePublication', []);

        return parent::getDatePublication();
    }

    /**
     * {@inheritDoc}
     */
    public function setAnnonceur($annonceur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAnnonceur', [$annonceur]);

        return parent::setAnnonceur($annonceur);
    }

    /**
     * {@inheritDoc}
     */
    public function getAnnonceur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAnnonceur', []);

        return parent::getAnnonceur();
    }

    /**
     * {@inheritDoc}
     */
    public function setDuree($duree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDuree', [$duree]);

        return parent::setDuree($duree);
    }

    /**
     * {@inheritDoc}
     */
    public function getDuree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuree', []);

        return parent::getDuree();
    }

    /**
     * {@inheritDoc}
     */
    public function setLieu($lieu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLieu', [$lieu]);

        return parent::setLieu($lieu);
    }

    /**
     * {@inheritDoc}
     */
    public function getLieu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLieu', []);

        return parent::getLieu();
    }

    /**
     * {@inheritDoc}
     */
    public function setProfil($profil)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProfil', [$profil]);

        return parent::setProfil($profil);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfil()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfil', []);

        return parent::getProfil();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtat($etat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtat', [$etat]);

        return parent::setEtat($etat);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtat', []);

        return parent::getEtat();
    }

    /**
     * {@inheritDoc}
     */
    public function addCollaborateur(\GM\ProjetBundle\Entity\Collaborateur $collaborateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCollaborateur', [$collaborateur]);

        return parent::addCollaborateur($collaborateur);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCollaborateur(\GM\ProjetBundle\Entity\Collaborateur $collaborateur)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCollaborateur', [$collaborateur]);

        return parent::removeCollaborateur($collaborateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getCollaborateurs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCollaborateurs', []);

        return parent::getCollaborateurs();
    }

    /**
     * {@inheritDoc}
     */
    public function addProjetColab(\GM\ProjetBundle\Entity\DossierMissions $projetColab)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProjetColab', [$projetColab]);

        return parent::addProjetColab($projetColab);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProjetColab(\GM\ProjetBundle\Entity\DossierMissions $projetColab)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProjetColab', [$projetColab]);

        return parent::removeProjetColab($projetColab);
    }

    /**
     * {@inheritDoc}
     */
    public function getProjetColab()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProjetColab', []);

        return parent::getProjetColab();
    }

}
